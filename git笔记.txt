git init
git add .
git commit -m "xxx" [文件名]
git status
git log --all --pretty=oneline --abbrev-commit --graph
git reset --hard 提交ID
git reflog
touch 文件名
cat 文件名
vi 文件名 i或a编辑 esc + :wq退出
touch .gitignore

git branch
git branch 分支名
git branch -d 分支名  删除分支，需检查
git branch -D 分支名 不做检查强制删除
git checkout 分支名 切换分支
git checkout -b 分支名  创建并切换
git merge (被合并)分支名  合并分支 要先切换到主分支

处理冲突
手动处理冲突的文件 然后add commit

添加远程仓库
git remote add 远端名称 仓库路径
查看远程仓库
git remote
推送到远程仓库
git push [--set-upstream] [远端名称 [本地分支名][:远端分支名] ]
--set-upstream 把本地分支和远端分支建立起关联关系
建立起关联关系后，可以直接 git push
如果远端分支名和本地相同，可以只写本地分支名
git push origin master

克隆仓库
git clone 仓库路径 [本地目录]

从远程仓库中抓取和拉取
git fetch [远端名] [分支名]
将仓库里的更新都抓取到本地, 不合并
如果不指定远端名和分支名, 则抓取所有分支
git pull [远端名] [分支名]
将仓库里的更新都拉到本地,并自动合并 相当于fetch+merge
如果不指定远端名和分支名, 则拉取所有分支并更新





